version: '3.8'

services:
  init:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${AIRFLOW_IMAGE_NAME}
    container_name: airflow_init
    depends_on:
      - db
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
    entrypoint: ["airflow", "db", "init"]

  webserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${AIRFLOW_IMAGE_NAME}
    container_name: airflow_webserver
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
    ports:
      - "8080:8080"
    depends_on:
      - db
    volumes:
      - ./dags:/opt/airflow/dags
    command: ["airflow", "webserver", "--port", "8080"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${AIRFLOW_IMAGE_NAME}
    container_name: airflow_scheduler
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      - db
    volumes:
      - ./dags:/opt/airflow/dags
    command: ["airflow", "scheduler"]
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname $(hostname) || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:

networks:
  default:
    name: airflow_network